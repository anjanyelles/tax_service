{"ast":null,"code":"var _jsxFileName = \"/Users/anjanyelle/Desktop/tax service/taxserves_react_crm_dashboard/src/components/Addemployees/Addemployees.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, Grid, Snackbar, MenuItem, Select, InputLabel, FormControl } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Table from \"components/Table/Table.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { fetchAllEmployeesAndManagers } from \"views/Apis/AfterLogin\";\nimport { sendRequest } from \"views/Apis/AfterLogin\";\n// import { fetchAllEmployeesAndManagers, sendRequest } from \"views/Apis/AfterLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(styles);\nexport default function Addemployees() {\n  _s();\n  const classes = useStyles();\n  const [openModal, setOpenModal] = useState(false);\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    mobileNumber: \"\",\n    password: \"\",\n    userType: \"admin\",\n    managerId: \"\" // For employees only\n  });\n  const [managers, setManagers] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    severity: \"success\",\n    message: \"\"\n  });\n  const [adminList, setAdminList] = useState([]);\n  const [managerList, setManagerList] = useState([]);\n  const [employeeList, setEmployeeList] = useState([]);\n\n  // Fetch all users\n  const getEmployees = async () => {\n    try {\n      const data = await fetchAllEmployeesAndManagers();\n      if (Array.isArray(data)) {\n        const admins = [],\n          managers = [],\n          employees = [];\n        data.forEach(emp => {\n          const fullName = `${emp.firstName} ${emp.lastName}`;\n          const email = emp.email;\n          const mobile = emp.mobileNumber;\n          if (emp.userType === \"admin\") {\n            admins.push([fullName, email, mobile]);\n          } else if (emp.userType === \"manager\") {\n            managers.push([fullName, email, mobile]);\n          } else if (emp.userType === \"employee\") {\n            employees.push([fullName, emp.managerName || \"N/A\", email, mobile]);\n          }\n        });\n        setAdminList(admins);\n        setManagerList(managers);\n        setEmployeeList(employees);\n      }\n    } catch (error) {\n      console.error(\"Error fetching employee data:\", error.message);\n    }\n  };\n  useEffect(() => {\n    getEmployees();\n  }, []);\n  const handleInputChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // If user selects \"employee\", fetch managers\n    if (name === \"userType\" && value === \"employee\") {\n      try {\n        const response = await fetch(\"https://asoft.click/api/incometax-service/auth/allmanagers\");\n        const data = await response.json();\n        setManagers(data); // save manager list for dropdown\n      } catch (error) {\n        console.error(\"Failed to fetch managers:\", error.message);\n      }\n    }\n\n    // Reset managerId if changing userType to anything other than employee\n    if (name === \"userType\" && value !== \"employee\") {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value,\n        managerId: \"\" // reset managerId\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const validate = () => {\n    let tempErrors = {};\n    if (!formData.firstName) tempErrors.firstName = \"First name is required\";\n    if (!formData.lastName) tempErrors.lastName = \"Last name is required\";\n    if (!formData.email) tempErrors.email = \"Email is required\";else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) tempErrors.email = \"Invalid email format\";\n    if (!formData.mobileNumber) tempErrors.mobileNumber = \"Mobile number is required\";else if (!/^\\d{10}$/.test(formData.mobileNumber)) tempErrors.mobileNumber = \"Invalid mobile number\";\n    if (!formData.password) tempErrors.password = \"Password is required\";\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0;\n  };\n  const handleSubmit = async () => {\n    try {\n      // Construct payload\n      const payload = {\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n        mobileNumber: formData.mobileNumber,\n        password: formData.password,\n        userType: formData.userType\n      };\n      if (formData.userType === \"employee\") {\n        payload.managerId = formData.managerId; // only for employees\n      }\n      const response = await sendRequest({\n        method: \"POST\",\n        url: \"auth/userEmailPassword\",\n        data: payload\n      });\n      alert(response.status);\n      if (response.userStatus) {\n        setSnackbar({\n          open: true,\n          severity: \"success\",\n          message: `${response.status} for ${formData.userType}!`\n        });\n      } else {\n        setSnackbar({\n          open: true,\n          severity: \"warning\",\n          message: `Failed to register ${formData.userType}.`\n        });\n      }\n\n      // Reset\n      setFormData({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        mobileNumber: \"\",\n        password: \"\",\n        userType: \"admin\",\n        managerId: \"\"\n      });\n      setOpenModal(false);\n      await getEmployees();\n    } catch (error) {\n      setSnackbar({\n        open: true,\n        severity: \"error\",\n        message: error.message\n      });\n    }\n  };\n\n  // Open Modal with userType set\n  const handleAddAdmin = type => () => {\n    setFormData(prev => ({\n      ...prev,\n      userType: type.toLowerCase()\n    }));\n    setOpenModal(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            color: \"primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: classes.cardTitleWhite,\n              children: \"Employee Management\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.cardCategoryWhite,\n              children: \"Employee, Manager & Admin List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                margin: \"20px 0\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Admins\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                variant: \"contained\",\n                onClick: handleAddAdmin(\"admin\"),\n                children: \"Add Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              tableHeaderColor: \"primary\",\n              tableHead: [\"Full Name\", \"Email\", \"Mobile\"],\n              tableData: adminList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                margin: \"20px 0\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Managers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"secondary\",\n                variant: \"contained\",\n                onClick: handleAddAdmin(\"manager\"),\n                children: \"Add Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              tableHeaderColor: \"warning\",\n              tableHead: [\"Full Name\", \"Email\", \"Mobile\"],\n              tableData: managerList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                margin: \"20px 0\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: handleAddAdmin(\"employee\"),\n                children: \"Add Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              tableHeaderColor: \"info\",\n              tableHead: [\"Full Name\", \"Manager\", \"Email\", \"Mobile\"],\n              tableData: employeeList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openModal,\n      onClose: () => setOpenModal(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: `Add ${formData.userType.charAt(0).toUpperCase() + formData.userType.slice(1)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"First Name\",\n              name: \"firstName\",\n              fullWidth: true,\n              value: formData.firstName,\n              onChange: handleInputChange,\n              error: !!errors.firstName,\n              helperText: errors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Last Name\",\n              name: \"lastName\",\n              fullWidth: true,\n              value: formData.lastName,\n              onChange: handleInputChange,\n              error: !!errors.lastName,\n              helperText: errors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              name: \"email\",\n              fullWidth: true,\n              value: formData.email,\n              onChange: handleInputChange,\n              error: !!errors.email,\n              helperText: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Mobile Number\",\n              name: \"mobileNumber\",\n              fullWidth: true,\n              value: formData.mobileNumber,\n              onChange: handleInputChange,\n              error: !!errors.mobileNumber,\n              helperText: errors.mobileNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Password\",\n              name: \"password\",\n              type: \"password\",\n              fullWidth: true,\n              value: formData.password,\n              onChange: handleInputChange,\n              error: !!errors.password,\n              helperText: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"User Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"userType\",\n                value: formData.userType,\n                onChange: handleInputChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"admin\",\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"manager\",\n                  children: \"Manager\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"employee\",\n                  children: \"Employee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 7\n          }, this), formData.userType === \"employee\" && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"managerId\",\n                value: formData.managerId,\n                onChange: handleInputChange,\n                children: managers.map(mgr => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: mgr.id,\n                  children: [mgr.firstName, \" \", mgr.lastName]\n                }, mgr.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenModal(false),\n          color: \"secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 4000,\n      onClose: () => setSnackbar({\n        ...snackbar,\n        open: false\n      }),\n      message: snackbar.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n_s(Addemployees, \"Ogqy1wwX6HBNylPSildEXCzbnnY=\", false, function () {\n  return [useStyles];\n});\n_c = Addemployees;\nvar _c;\n$RefreshReg$(_c, \"Addemployees\");","map":{"version":3,"names":["React","useState","useEffect","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","Grid","Snackbar","MenuItem","Select","InputLabel","FormControl","makeStyles","Card","CardHeader","CardBody","Table","GridContainer","GridItem","styles","fetchAllEmployeesAndManagers","sendRequest","jsxDEV","_jsxDEV","useStyles","Addemployees","_s","classes","openModal","setOpenModal","formData","setFormData","firstName","lastName","email","mobileNumber","password","userType","managerId","managers","setManagers","errors","setErrors","snackbar","setSnackbar","open","severity","message","adminList","setAdminList","managerList","setManagerList","employeeList","setEmployeeList","getEmployees","data","Array","isArray","admins","employees","forEach","emp","fullName","mobile","push","managerName","error","console","handleInputChange","e","name","value","target","response","fetch","json","prev","validate","tempErrors","test","Object","keys","length","handleSubmit","payload","method","url","alert","status","userStatus","handleAddAdmin","type","toLowerCase","children","xs","color","className","cardTitleWhite","fileName","_jsxFileName","lineNumber","columnNumber","cardCategoryWhite","style","display","justifyContent","margin","variant","onClick","tableHeaderColor","tableHead","tableData","onClose","maxWidth","fullWidth","charAt","toUpperCase","slice","container","spacing","item","label","onChange","helperText","map","mgr","id","autoHideDuration","_c","$RefreshReg$"],"sources":["/Users/anjanyelle/Desktop/tax service/taxserves_react_crm_dashboard/src/components/Addemployees/Addemployees.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  Grid,\n  Snackbar,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Table from \"components/Table/Table.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { fetchAllEmployeesAndManagers } from \"views/Apis/AfterLogin\";\nimport { sendRequest } from \"views/Apis/AfterLogin\";\n// import { fetchAllEmployeesAndManagers, sendRequest } from \"views/Apis/AfterLogin\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Addemployees() {\n  const classes = useStyles();\n\n  const [openModal, setOpenModal] = useState(false);\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    mobileNumber: \"\",\n    password: \"\",\n    userType: \"admin\",\n    managerId: \"\", // For employees only\n  });\n\n  const [managers, setManagers] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    severity: \"success\",\n    message: \"\",\n  });\n  const [adminList, setAdminList] = useState([]);\n  const [managerList, setManagerList] = useState([]);\n  const [employeeList, setEmployeeList] = useState([]);\n\n  // Fetch all users\n  const getEmployees = async () => {\n    try {\n      const data = await fetchAllEmployeesAndManagers();\n      if (Array.isArray(data)) {\n        const admins = [], managers = [], employees = [];\n        data.forEach((emp) => {\n          const fullName = `${emp.firstName} ${emp.lastName}`;\n          const email = emp.email;\n          const mobile = emp.mobileNumber;\n          if (emp.userType === \"admin\") {\n            admins.push([fullName, email, mobile]);\n          } else if (emp.userType === \"manager\") {\n            managers.push([fullName, email, mobile]);\n          } else if (emp.userType === \"employee\") {\n            employees.push([\n              fullName,\n              emp.managerName || \"N/A\",\n              email,\n              mobile,\n            ]);\n\n          }\n        });\n        setAdminList(admins);\n        setManagerList(managers);\n        setEmployeeList(employees);\n      }\n    } catch (error) {\n      console.error(\"Error fetching employee data:\", error.message);\n    }\n  };\n\n  useEffect(() => {\n    getEmployees();\n  }, []);\n\n  const handleInputChange = async (e) => {\n    const { name, value } = e.target;\n\n    // If user selects \"employee\", fetch managers\n    if (name === \"userType\" && value === \"employee\") {\n      try {\n        const response = await fetch(\"https://asoft.click/api/incometax-service/auth/allmanagers\");\n        const data = await response.json();\n        setManagers(data); // save manager list for dropdown\n      } catch (error) {\n        console.error(\"Failed to fetch managers:\", error.message);\n      }\n    }\n\n    // Reset managerId if changing userType to anything other than employee\n    if (name === \"userType\" && value !== \"employee\") {\n      setFormData((prev) => ({\n        ...prev,\n        [name]: value,\n        managerId: \"\", // reset managerId\n      }));\n    } else {\n      setFormData((prev) => ({\n        ...prev,\n        [name]: value,\n      }));\n    }\n  };\n\n\n  const validate = () => {\n    let tempErrors = {};\n    if (!formData.firstName) tempErrors.firstName = \"First name is required\";\n    if (!formData.lastName) tempErrors.lastName = \"Last name is required\";\n    if (!formData.email) tempErrors.email = \"Email is required\";\n    else if (!/\\S+@\\S+\\.\\S+/.test(formData.email))\n      tempErrors.email = \"Invalid email format\";\n    if (!formData.mobileNumber)\n      tempErrors.mobileNumber = \"Mobile number is required\";\n    else if (!/^\\d{10}$/.test(formData.mobileNumber))\n      tempErrors.mobileNumber = \"Invalid mobile number\";\n    if (!formData.password) tempErrors.password = \"Password is required\";\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0;\n  };\n\n  const handleSubmit = async () => {\n    try {\n      // Construct payload\n      const payload = {\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n        mobileNumber: formData.mobileNumber,\n        password: formData.password,\n        userType: formData.userType,\n      };\n\n      if (formData.userType === \"employee\") {\n        payload.managerId = formData.managerId; // only for employees\n      }\n\n      const response = await sendRequest({\n        method: \"POST\",\n        url: \"auth/userEmailPassword\",\n        data: payload,\n      });\n\n      alert(response.status);\n\n      if (response.userStatus) {\n        setSnackbar({\n          open: true,\n          severity: \"success\",\n          message: `${response.status} for ${formData.userType}!`,\n        });\n      } else {\n        setSnackbar({\n          open: true,\n          severity: \"warning\",\n          message: `Failed to register ${formData.userType}.`,\n        });\n      }\n\n      // Reset\n      setFormData({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        mobileNumber: \"\",\n        password: \"\",\n        userType: \"admin\",\n        managerId: \"\",\n      });\n      setOpenModal(false);\n      await getEmployees();\n    } catch (error) {\n      setSnackbar({\n        open: true,\n        severity: \"error\",\n        message: error.message,\n      });\n    }\n  };\n\n\n\n  // Open Modal with userType set\n  const handleAddAdmin = (type) => () => {\n    setFormData((prev) => ({\n      ...prev,\n      userType: type.toLowerCase(),\n    }));\n    setOpenModal(true);\n  };\n\n  return (\n    <div>\n      <GridContainer>\n        <GridItem xs={12}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Employee Management</h4>\n              <p className={classes.cardCategoryWhite}>\n                Employee, Manager & Admin List\n              </p>\n            </CardHeader>\n            <CardBody>\n              {/* Admin Table */}\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"20px 0\" }}>\n                <h4>Admins</h4>\n                <Button color=\"primary\" variant=\"contained\" onClick={handleAddAdmin(\"admin\")}>\n                  Add Admin\n                </Button>\n              </div>\n              <Table\n                tableHeaderColor=\"primary\"\n                tableHead={[\"Full Name\", \"Email\", \"Mobile\"]}\n                tableData={adminList}\n              />\n\n              {/* Manager Table */}\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"20px 0\" }}>\n                <h4>Managers</h4>\n                <Button color=\"secondary\" variant=\"contained\" onClick={handleAddAdmin(\"manager\")}>\n                  Add Manager\n                </Button>\n              </div>\n              <Table\n                tableHeaderColor=\"warning\"\n                tableHead={[\"Full Name\", \"Email\", \"Mobile\"]}\n                tableData={managerList}\n              />\n\n              {/* Employee Table */}\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"20px 0\" }}>\n                <h4>Employees</h4>\n                <Button variant=\"contained\" onClick={handleAddAdmin(\"employee\")}>\n                  Add Employee\n                </Button>\n              </div>\n              <Table\n                tableHeaderColor=\"info\"\n                tableHead={[\"Full Name\", \"Manager\", \"Email\", \"Mobile\"]}\n                tableData={employeeList}\n              />\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n\n      {/* Add User Modal */}\n      <Dialog\n  open={openModal}\n  onClose={() => setOpenModal(false)}\n  maxWidth=\"sm\"\n  fullWidth\n>\n  <DialogTitle>\n    {`Add ${formData.userType.charAt(0).toUpperCase() + formData.userType.slice(1)}`}\n  </DialogTitle>\n  <DialogContent>\n    <Grid container spacing={2}>\n      {/* First Name */}\n      <Grid item xs={6}>\n        <TextField\n          label=\"First Name\"\n          name=\"firstName\"\n          fullWidth\n          value={formData.firstName}\n          onChange={handleInputChange}\n          error={!!errors.firstName}\n          helperText={errors.firstName}\n        />\n      </Grid>\n\n      {/* Last Name */}\n      <Grid item xs={6}>\n        <TextField\n          label=\"Last Name\"\n          name=\"lastName\"\n          fullWidth\n          value={formData.lastName}\n          onChange={handleInputChange}\n          error={!!errors.lastName}\n          helperText={errors.lastName}\n        />\n      </Grid>\n\n      {/* Email */}\n      <Grid item xs={6}>\n        <TextField\n          label=\"Email\"\n          name=\"email\"\n          fullWidth\n          value={formData.email}\n          onChange={handleInputChange}\n          error={!!errors.email}\n          helperText={errors.email}\n        />\n      </Grid>\n\n      {/* Mobile Number */}\n      <Grid item xs={6}>\n        <TextField\n          label=\"Mobile Number\"\n          name=\"mobileNumber\"\n          fullWidth\n          value={formData.mobileNumber}\n          onChange={handleInputChange}\n          error={!!errors.mobileNumber}\n          helperText={errors.mobileNumber}\n        />\n      </Grid>\n\n      {/* Password */}\n      <Grid item xs={6}>\n        <TextField\n          label=\"Password\"\n          name=\"password\"\n          type=\"password\"\n          fullWidth\n          value={formData.password}\n          onChange={handleInputChange}\n          error={!!errors.password}\n          helperText={errors.password}\n        />\n      </Grid>\n\n      {/* User Type Dropdown */}\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>User Type</InputLabel>\n          <Select\n            name=\"userType\"\n            value={formData.userType}\n            onChange={handleInputChange}\n          >\n            <MenuItem value=\"admin\">Admin</MenuItem>\n            <MenuItem value=\"manager\">Manager</MenuItem>\n            <MenuItem value=\"employee\">Employee</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n\n      {/* Manager Dropdown if userType === 'employee' */}\n      {formData.userType === \"employee\" && (\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <InputLabel>Manager</InputLabel>\n            <Select\n              name=\"managerId\"\n              value={formData.managerId}\n              onChange={handleInputChange}\n            >\n              {managers.map((mgr) => (\n                <MenuItem key={mgr.id} value={mgr.id}>\n                  {mgr.firstName} {mgr.lastName}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n      )}\n    </Grid>\n  </DialogContent>\n  <DialogActions>\n    <Button onClick={() => setOpenModal(false)} color=\"secondary\">\n      Cancel\n    </Button>\n    <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">\n      Submit\n    </Button>\n  </DialogActions>\n</Dialog>\n\n\n      {/* Snackbar */}\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={4000}\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\n        message={snackbar.message}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}