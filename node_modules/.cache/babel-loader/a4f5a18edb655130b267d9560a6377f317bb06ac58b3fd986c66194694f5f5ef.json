{"ast":null,"code":"import React from\"react\";import classNames from\"classnames\";// @material-ui/core components\nimport{makeStyles}from\"@material-ui/core/styles\";import FormControl from\"@material-ui/core/FormControl\";import InputLabel from\"@material-ui/core/InputLabel\";import Input from\"@material-ui/core/Input\";// @material-ui/icons\nimport Clear from\"@material-ui/icons/Clear\";import Check from\"@material-ui/icons/Check\";// core components\nimport styles from\"assets/jss/material-dashboard-react/components/customInputStyle.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const useStyles=makeStyles(styles);export default function CustomInput(props){const classes=useStyles();const{formControlProps,labelText,id,labelProps,inputProps,error,success,rtlActive}=props;const labelClasses=classNames({[\" \"+classes.labelRootError]:error,[\" \"+classes.labelRootSuccess]:success&&!error,[\" \"+classes.labelRTL]:rtlActive});const underlineClasses=classNames({[classes.underlineError]:error,[classes.underlineSuccess]:success&&!error,[classes.underline]:true});const marginTop=classNames({[classes.marginTop]:labelText===undefined});let newInputProps={maxLength:inputProps&&inputProps.maxLength?inputProps.maxLength:undefined,minLength:inputProps&&inputProps.minLength?inputProps.minLength:undefined,step:inputProps&&inputProps.step?inputProps.step:undefined};return/*#__PURE__*/_jsxs(FormControl,{...formControlProps,className:formControlProps.className+\" \"+classes.formControl,children:[labelText!==undefined?/*#__PURE__*/_jsx(InputLabel,{className:classes.labelRoot+labelClasses,htmlFor:id,...labelProps,children:labelText}):null,/*#__PURE__*/_jsx(Input,{classes:{root:marginTop,disabled:classes.disabled,underline:underlineClasses},id:id,...inputProps,inputProps:newInputProps}),error?/*#__PURE__*/_jsx(Clear,{className:classes.feedback+\" \"+classes.labelRootError}):success?/*#__PURE__*/_jsx(Check,{className:classes.feedback+\" \"+classes.labelRootSuccess}):null]});}","map":{"version":3,"names":["React","classNames","makeStyles","FormControl","InputLabel","Input","Clear","Check","styles","jsx","_jsx","jsxs","_jsxs","useStyles","CustomInput","props","classes","formControlProps","labelText","id","labelProps","inputProps","error","success","rtlActive","labelClasses","labelRootError","labelRootSuccess","labelRTL","underlineClasses","underlineError","underlineSuccess","underline","marginTop","undefined","newInputProps","maxLength","minLength","step","className","formControl","children","labelRoot","htmlFor","root","disabled","feedback"],"sources":["/Users/anjanyelle/Desktop/tax/taxserves_react_crm_dashboard/src/components/CustomInput/CustomInput.js"],"sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\n// @material-ui/icons\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport Check from \"@material-ui/icons/Check\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/customInputStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CustomInput(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    formControlProps,\r\n    labelText,\r\n    id,\r\n    labelProps,\r\n    inputProps,\r\n    error,\r\n    success,\r\n    rtlActive,\r\n  } = props;\r\n\r\n  const labelClasses = classNames({\r\n    [\" \" + classes.labelRootError]: error,\r\n    [\" \" + classes.labelRootSuccess]: success && !error,\r\n    [\" \" + classes.labelRTL]: rtlActive,\r\n  });\r\n  const underlineClasses = classNames({\r\n    [classes.underlineError]: error,\r\n    [classes.underlineSuccess]: success && !error,\r\n    [classes.underline]: true,\r\n  });\r\n  const marginTop = classNames({\r\n    [classes.marginTop]: labelText === undefined,\r\n  });\r\n  let newInputProps = {\r\n    maxLength:\r\n      inputProps && inputProps.maxLength ? inputProps.maxLength : undefined,\r\n    minLength:\r\n      inputProps && inputProps.minLength ? inputProps.minLength : undefined,\r\n    step: inputProps && inputProps.step ? inputProps.step : undefined,\r\n  };\r\n  return (\r\n    <FormControl\r\n      {...formControlProps}\r\n      className={formControlProps.className + \" \" + classes.formControl}\r\n    >\r\n      {labelText !== undefined ? (\r\n        <InputLabel\r\n          className={classes.labelRoot + labelClasses}\r\n          htmlFor={id}\r\n          {...labelProps}\r\n        >\r\n          {labelText}\r\n        </InputLabel>\r\n      ) : null}\r\n      <Input\r\n        classes={{\r\n          root: marginTop,\r\n          disabled: classes.disabled,\r\n          underline: underlineClasses,\r\n        }}\r\n        id={id}\r\n        {...inputProps}\r\n        inputProps={newInputProps}\r\n      />\r\n      {error ? (\r\n        <Clear className={classes.feedback + \" \" + classes.labelRootError} />\r\n      ) : success ? (\r\n        <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\r\n      ) : null}\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nCustomInput.propTypes = {\r\n  labelText: PropTypes.node,\r\n  labelProps: PropTypes.object,\r\n  id: PropTypes.string,\r\n  inputProps: PropTypes.object,\r\n  formControlProps: PropTypes.object,\r\n  error: PropTypes.bool,\r\n  success: PropTypes.bool,\r\n  rtlActive: PropTypes.bool,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}