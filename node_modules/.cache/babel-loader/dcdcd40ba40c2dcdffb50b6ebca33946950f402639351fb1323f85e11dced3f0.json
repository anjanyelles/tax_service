{"ast":null,"code":"import React from\"react\";// nodejs library that concatenates classes\nimport classNames from\"classnames\";// nodejs library to set properties for components\n// material-ui components\nimport{makeStyles}from\"@material-ui/core/styles\";import Tabs from\"@material-ui/core/Tabs\";import Tab from\"@material-ui/core/Tab\";// core components\nimport Card from\"components/Card/Card.js\";import CardBody from\"components/Card/CardBody.js\";import CardHeader from\"components/Card/CardHeader.js\";import styles from\"assets/jss/material-dashboard-react/components/customTabsStyle.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const useStyles=makeStyles(styles);export default function CustomTabs(props){const[value,setValue]=React.useState(0);const handleChange=(event,value)=>{setValue(value);};const classes=useStyles();const{headerColor,plainTabs,tabs,title,rtlActive}=props;const cardTitle=classNames({[classes.cardTitle]:true,[classes.cardTitleRTL]:rtlActive});return/*#__PURE__*/_jsxs(Card,{plain:plainTabs,children:[/*#__PURE__*/_jsxs(CardHeader,{color:headerColor,plain:plainTabs,children:[title!==undefined?/*#__PURE__*/_jsx(\"div\",{className:cardTitle,children:title}):null,/*#__PURE__*/_jsx(Tabs,{value:value,onChange:handleChange,classes:{root:classes.tabsRoot,indicator:classes.displayNone,scrollButtons:classes.displayNone},variant:\"scrollable\",scrollButtons:\"auto\",children:tabs.map((prop,key)=>{var icon={};if(prop.tabIcon){icon={icon:/*#__PURE__*/_jsx(prop.tabIcon,{})};}return/*#__PURE__*/_jsx(Tab,{classes:{root:classes.tabRootButton,selected:classes.tabSelected,wrapper:classes.tabWrapper},label:prop.tabName,...icon},key);})})]}),/*#__PURE__*/_jsx(CardBody,{children:tabs.map((prop,key)=>{if(key===value){return/*#__PURE__*/_jsx(\"div\",{children:prop.tabContent},key);}return null;})})]});}","map":{"version":3,"names":["React","classNames","makeStyles","Tabs","Tab","Card","CardBody","CardHeader","styles","jsx","_jsx","jsxs","_jsxs","useStyles","CustomTabs","props","value","setValue","useState","handleChange","event","classes","headerColor","plainTabs","tabs","title","rtlActive","cardTitle","cardTitleRTL","plain","children","color","undefined","className","onChange","root","tabsRoot","indicator","displayNone","scrollButtons","variant","map","prop","key","icon","tabIcon","tabRootButton","selected","tabSelected","wrapper","tabWrapper","label","tabName","tabContent"],"sources":["/Users/anjanyelle/Desktop/tax/taxserves_react_crm_dashboard/src/components/CustomTabs/CustomTabs.js"],"sourcesContent":["import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n\r\n// material-ui components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n// core components\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/customTabsStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CustomTabs(props) {\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, value) => {\r\n    setValue(value);\r\n  };\r\n  const classes = useStyles();\r\n  const { headerColor, plainTabs, tabs, title, rtlActive } = props;\r\n  const cardTitle = classNames({\r\n    [classes.cardTitle]: true,\r\n    [classes.cardTitleRTL]: rtlActive,\r\n  });\r\n  return (\r\n    <Card plain={plainTabs}>\r\n      <CardHeader color={headerColor} plain={plainTabs}>\r\n        {title !== undefined ? <div className={cardTitle}>{title}</div> : null}\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          classes={{\r\n            root: classes.tabsRoot,\r\n            indicator: classes.displayNone,\r\n            scrollButtons: classes.displayNone,\r\n          }}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n        >\r\n          {tabs.map((prop, key) => {\r\n            var icon = {};\r\n            if (prop.tabIcon) {\r\n              icon = {\r\n                icon: <prop.tabIcon />,\r\n              };\r\n            }\r\n            return (\r\n              <Tab\r\n                classes={{\r\n                  root: classes.tabRootButton,\r\n                  selected: classes.tabSelected,\r\n                  wrapper: classes.tabWrapper,\r\n                }}\r\n                key={key}\r\n                label={prop.tabName}\r\n                {...icon}\r\n              />\r\n            );\r\n          })}\r\n        </Tabs>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {tabs.map((prop, key) => {\r\n          if (key === value) {\r\n            return <div key={key}>{prop.tabContent}</div>;\r\n          }\r\n          return null;\r\n        })}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nCustomTabs.propTypes = {\r\n  headerColor: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"success\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"primary\",\r\n    \"rose\",\r\n  ]),\r\n  title: PropTypes.string,\r\n  tabs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      tabName: PropTypes.string.isRequired,\r\n      tabIcon: PropTypes.object,\r\n      tabContent: PropTypes.node.isRequired,\r\n    })\r\n  ),\r\n  rtlActive: PropTypes.bool,\r\n  plainTabs: PropTypes.bool,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}