{"ast":null,"code":"var _jsxFileName = \"/Users/anjanyelle/Desktop/tax/taxserves_react_crm_dashboard/src/components/Addemployees/Addemployees.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, Grid, Snackbar, MenuItem, Select, InputLabel, FormControl } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Table from \"components/Table/Table.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { fetchAllEmployeesAndManagers } from \"views/Apis/AfterLogin\";\nimport { sendRequest } from \"views/Apis/AfterLogin\";\nimport { updateLoginStatus } from \"views/Apis/AfterLogin\";\n// import { fetchAllEmployeesAndManagers, sendRequest } from \"views/Apis/AfterLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(styles);\nexport default function Addemployees() {\n  _s();\n  const classes = useStyles();\n  const [openModal, setOpenModal] = useState(false);\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    mobileNumber: \"\",\n    password: \"\",\n    userType: \"admin\",\n    managerId: \"\" // For employees only\n  });\n  const [managers, setManagers] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    severity: \"success\",\n    message: \"\"\n  });\n  const [adminList, setAdminList] = useState([]);\n  const [managerList, setManagerList] = useState([]);\n  const [employeeList, setEmployeeList] = useState([]);\n\n  // Fetch all users\n  const getEmployees = async () => {\n    try {\n      const data = await fetchAllEmployeesAndManagers();\n      if (Array.isArray(data)) {\n        const admins = [],\n          managers = [],\n          employees = [];\n        data.forEach(emp => {\n          const fullName = `${emp.firstName} ${emp.lastName}`;\n          const email = emp.email;\n          const mobile = emp.mobileNumber;\n          const statusToggle = /*#__PURE__*/_jsxDEV(Switch, {\n            checked: emp.loginStatus,\n            onChange: () => handleToggleLoginStatus(emp.id, !emp.loginStatus),\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 5\n          }, this);\n          if (emp.userType === \"admin\") {\n            admins.push([fullName, email, mobile]);\n          } else if (emp.userType === \"manager\") {\n            managers.push([fullName, email, mobile]);\n          } else if (emp.userType === \"employee\") {\n            employees.push([fullName, emp.managerName || \"N/A\", email, mobile, statusToggle]);\n          }\n        });\n        setAdminList(admins);\n        setManagerList(managers);\n        setEmployeeList(employees);\n      }\n    } catch (error) {\n      console.error(\"Error fetching employee data:\", error.message);\n    }\n  };\n  useEffect(() => {\n    getEmployees();\n  }, []);\n  const handleInputChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // If user selects \"employee\", fetch managers\n    if (name === \"userType\" && value === \"employee\") {\n      try {\n        const response = await fetch(\"http://ec2-43-204-235-24.ap-south-1.compute.amazonaws.com:8686/api/incometax-service/auth/allmanagers\");\n        const data = await response.json();\n        setManagers(data); // save manager list for dropdown\n      } catch (error) {\n        console.error(\"Failed to fetch managers:\", error.message);\n      }\n    }\n\n    // Reset managerId if changing userType to anything other than employee\n    if (name === \"userType\" && value !== \"employee\") {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value,\n        managerId: \"\" // reset managerId\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const validate = () => {\n    let tempErrors = {};\n    if (!formData.firstName) tempErrors.firstName = \"First name is required\";\n    if (!formData.lastName) tempErrors.lastName = \"Last name is required\";\n    if (!formData.email) tempErrors.email = \"Email is required\";else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) tempErrors.email = \"Invalid email format\";\n    if (!formData.mobileNumber) tempErrors.mobileNumber = \"Mobile number is required\";else if (!/^\\d{10}$/.test(formData.mobileNumber)) tempErrors.mobileNumber = \"Invalid mobile number\";\n    if (!formData.password) tempErrors.password = \"Password is required\";\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0;\n  };\n  const handleSubmit = async () => {\n    try {\n      // Construct payload\n      const payload = {\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n        mobileNumber: formData.mobileNumber,\n        password: formData.password,\n        userType: formData.userType\n      };\n      if (formData.userType === \"employee\") {\n        payload.managerId = formData.managerId; // only for employees\n      }\n      const response = await sendRequest({\n        method: \"POST\",\n        url: \"auth/userEmailPassword\",\n        data: payload\n      });\n      alert(response.status);\n      if (response.userStatus) {\n        setSnackbar({\n          open: true,\n          severity: \"success\",\n          message: `${response.status} for ${formData.userType}!`\n        });\n      } else {\n        setSnackbar({\n          open: true,\n          severity: \"warning\",\n          message: `Failed to register ${formData.userType}.`\n        });\n      }\n\n      // Reset\n      setFormData({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        mobileNumber: \"\",\n        password: \"\",\n        userType: \"admin\",\n        managerId: \"\"\n      });\n      setOpenModal(false);\n      await getEmployees();\n    } catch (error) {\n      setSnackbar({\n        open: true,\n        severity: \"error\",\n        message: error.message\n      });\n    }\n  };\n\n  // Open Modal with userType set\n  const handleAddAdmin = type => () => {\n    setFormData(prev => ({\n      ...prev,\n      userType: type.toLowerCase()\n    }));\n    setOpenModal(true);\n  };\n  const handleToggleLoginStatus = async (userId, newStatus) => {\n    try {\n      const result = await updateLoginStatus(userId, newStatus);\n      console.log('Login status updated successfully:', result);\n      getEmployees();\n    } catch (error) {\n      console.error('Failed to update login status:', error.message);\n      setSnackbar({\n        open: true,\n        severity: \"error\",\n        message: `Failed to update login status: ${error.message}`\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            color: \"primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: classes.cardTitleWhite,\n              children: \"Employee Management\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.cardCategoryWhite,\n              children: \"Employee, Manager & Admin List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                margin: \"20px 0\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Admins\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                variant: \"contained\",\n                onClick: handleAddAdmin(\"admin\"),\n                children: \"Add Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              tableHeaderColor: \"primary\",\n              tableHead: [\"Full Name\", \"Email\", \"Mobile\"],\n              tableData: adminList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                margin: \"20px 0\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Managers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"secondary\",\n                variant: \"contained\",\n                onClick: handleAddAdmin(\"manager\"),\n                children: \"Add Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              tableHeaderColor: \"warning\",\n              tableHead: [\"Full Name\", \"Email\", \"Mobile\"],\n              tableData: managerList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                margin: \"20px 0\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: handleAddAdmin(\"employee\"),\n                children: \"Add Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              tableHeaderColor: \"info\",\n              tableHead: [\"Full Name\", \"Manager\", \"Email\", \"Mobile\", \"Status\"],\n              tableData: employeeList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openModal,\n      onClose: () => setOpenModal(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: `Add ${formData.userType.charAt(0).toUpperCase() + formData.userType.slice(1)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"First Name\",\n              name: \"firstName\",\n              fullWidth: true,\n              value: formData.firstName,\n              onChange: handleInputChange,\n              error: !!errors.firstName,\n              helperText: errors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Last Name\",\n              name: \"lastName\",\n              fullWidth: true,\n              value: formData.lastName,\n              onChange: handleInputChange,\n              error: !!errors.lastName,\n              helperText: errors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              name: \"email\",\n              fullWidth: true,\n              value: formData.email,\n              onChange: handleInputChange,\n              error: !!errors.email,\n              helperText: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Mobile Number\",\n              name: \"mobileNumber\",\n              fullWidth: true,\n              value: formData.mobileNumber,\n              onChange: handleInputChange,\n              error: !!errors.mobileNumber,\n              helperText: errors.mobileNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Password\",\n              name: \"password\",\n              type: \"password\",\n              fullWidth: true,\n              value: formData.password,\n              onChange: handleInputChange,\n              error: !!errors.password,\n              helperText: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"User Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"userType\",\n                value: formData.userType,\n                onChange: handleInputChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"admin\",\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"manager\",\n                  children: \"Manager\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"employee\",\n                  children: \"Employee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 7\n          }, this), formData.userType === \"employee\" && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"managerId\",\n                value: formData.managerId,\n                onChange: handleInputChange,\n                children: managers.map(mgr => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: mgr.id,\n                  children: [mgr.firstName, \" \", mgr.lastName]\n                }, mgr.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenModal(false),\n          color: \"secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 4000,\n      onClose: () => setSnackbar({\n        ...snackbar,\n        open: false\n      }),\n      message: snackbar.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n}\n_s(Addemployees, \"zJFrFIKRaYSC94plpQVxzTP/cs4=\", false, function () {\n  return [useStyles];\n});\n_c = Addemployees;\nvar _c;\n$RefreshReg$(_c, \"Addemployees\");","map":{"version":3,"names":["React","useState","useEffect","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","Grid","Snackbar","MenuItem","Select","InputLabel","FormControl","Switch","makeStyles","Card","CardHeader","CardBody","Table","GridContainer","GridItem","styles","fetchAllEmployeesAndManagers","sendRequest","updateLoginStatus","jsxDEV","_jsxDEV","useStyles","Addemployees","_s","classes","openModal","setOpenModal","formData","setFormData","firstName","lastName","email","mobileNumber","password","userType","managerId","managers","setManagers","errors","setErrors","snackbar","setSnackbar","open","severity","message","adminList","setAdminList","managerList","setManagerList","employeeList","setEmployeeList","getEmployees","data","Array","isArray","admins","employees","forEach","emp","fullName","mobile","statusToggle","checked","loginStatus","onChange","handleToggleLoginStatus","id","color","fileName","_jsxFileName","lineNumber","columnNumber","push","managerName","error","console","handleInputChange","e","name","value","target","response","fetch","json","prev","validate","tempErrors","test","Object","keys","length","handleSubmit","payload","method","url","alert","status","userStatus","handleAddAdmin","type","toLowerCase","userId","newStatus","result","log","children","xs","className","cardTitleWhite","cardCategoryWhite","style","display","justifyContent","margin","variant","onClick","tableHeaderColor","tableHead","tableData","onClose","maxWidth","fullWidth","charAt","toUpperCase","slice","container","spacing","item","label","helperText","map","mgr","autoHideDuration","_c","$RefreshReg$"],"sources":["/Users/anjanyelle/Desktop/tax/taxserves_react_crm_dashboard/src/components/Addemployees/Addemployees.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Snackbar,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Table from \"components/Table/Table.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport { fetchAllEmployeesAndManagers } from \"views/Apis/AfterLogin\";\r\nimport { sendRequest } from \"views/Apis/AfterLogin\";\r\nimport { updateLoginStatus } from \"views/Apis/AfterLogin\";\r\n// import { fetchAllEmployeesAndManagers, sendRequest } from \"views/Apis/AfterLogin\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Addemployees() {\r\n  const classes = useStyles();\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    mobileNumber: \"\",\r\n    password: \"\",\r\n    userType: \"admin\",\r\n    managerId: \"\", // For employees only\r\n  });\r\n\r\n  const [managers, setManagers] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    severity: \"success\",\r\n    message: \"\",\r\n  });\r\n  const [adminList, setAdminList] = useState([]);\r\n  const [managerList, setManagerList] = useState([]);\r\n  const [employeeList, setEmployeeList] = useState([]);\r\n\r\n  // Fetch all users\r\n  const getEmployees = async () => {\r\n    try {\r\n      const data = await fetchAllEmployeesAndManagers();\r\n      if (Array.isArray(data)) {\r\n        const admins = [], managers = [], employees = [];\r\n        data.forEach((emp) => {\r\n          const fullName = `${emp.firstName} ${emp.lastName}`;\r\n          const email = emp.email;\r\n          const mobile = emp.mobileNumber;\r\n\r\n          const statusToggle = (\r\n    <Switch\r\n      checked={emp.loginStatus}\r\n      onChange={() => handleToggleLoginStatus(emp.id, !emp.loginStatus)}\r\n      color=\"primary\"\r\n    />\r\n  );\r\n\r\n          if (emp.userType === \"admin\") {\r\n            admins.push([fullName, email, mobile]);\r\n          } else if (emp.userType === \"manager\") {\r\n            managers.push([fullName, email, mobile]);\r\n          } else if (emp.userType === \"employee\") {\r\n            employees.push([\r\n              fullName,\r\n              emp.managerName || \"N/A\",\r\n              email,\r\n              mobile,\r\n              statusToggle,\r\n            ]);\r\n\r\n          }\r\n        });\r\n        setAdminList(admins);\r\n        setManagerList(managers);\r\n        setEmployeeList(employees);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching employee data:\", error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEmployees();\r\n  }, []);\r\n\r\n  const handleInputChange = async (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    // If user selects \"employee\", fetch managers\r\n    if (name === \"userType\" && value === \"employee\") {\r\n      try {\r\n        const response = await fetch(\"http://ec2-43-204-235-24.ap-south-1.compute.amazonaws.com:8686/api/incometax-service/auth/allmanagers\");\r\n        const data = await response.json();\r\n        setManagers(data); // save manager list for dropdown\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch managers:\", error.message);\r\n      }\r\n    }\r\n\r\n    // Reset managerId if changing userType to anything other than employee\r\n    if (name === \"userType\" && value !== \"employee\") {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n        managerId: \"\", // reset managerId\r\n      }));\r\n    } else {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n\r\n  const validate = () => {\r\n    let tempErrors = {};\r\n    if (!formData.firstName) tempErrors.firstName = \"First name is required\";\r\n    if (!formData.lastName) tempErrors.lastName = \"Last name is required\";\r\n    if (!formData.email) tempErrors.email = \"Email is required\";\r\n    else if (!/\\S+@\\S+\\.\\S+/.test(formData.email))\r\n      tempErrors.email = \"Invalid email format\";\r\n    if (!formData.mobileNumber)\r\n      tempErrors.mobileNumber = \"Mobile number is required\";\r\n    else if (!/^\\d{10}$/.test(formData.mobileNumber))\r\n      tempErrors.mobileNumber = \"Invalid mobile number\";\r\n    if (!formData.password) tempErrors.password = \"Password is required\";\r\n    setErrors(tempErrors);\r\n    return Object.keys(tempErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      // Construct payload\r\n      const payload = {\r\n        firstName: formData.firstName,\r\n        lastName: formData.lastName,\r\n        email: formData.email,\r\n        mobileNumber: formData.mobileNumber,\r\n        password: formData.password,\r\n        userType: formData.userType,\r\n      };\r\n\r\n      if (formData.userType === \"employee\") {\r\n        payload.managerId = formData.managerId; // only for employees\r\n      }\r\n\r\n      const response = await sendRequest({\r\n        method: \"POST\",\r\n        url: \"auth/userEmailPassword\",\r\n        data: payload,\r\n      });\r\n\r\n      alert(response.status);\r\n\r\n      if (response.userStatus) {\r\n        setSnackbar({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: `${response.status} for ${formData.userType}!`,\r\n        });\r\n      } else {\r\n        setSnackbar({\r\n          open: true,\r\n          severity: \"warning\",\r\n          message: `Failed to register ${formData.userType}.`,\r\n        });\r\n      }\r\n\r\n      // Reset\r\n      setFormData({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        mobileNumber: \"\",\r\n        password: \"\",\r\n        userType: \"admin\",\r\n        managerId: \"\",\r\n      });\r\n      setOpenModal(false);\r\n      await getEmployees();\r\n    } catch (error) {\r\n      setSnackbar({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Open Modal with userType set\r\n  const handleAddAdmin = (type) => () => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      userType: type.toLowerCase(),\r\n    }));\r\n    setOpenModal(true);\r\n  };\r\n\r\n const handleToggleLoginStatus = async (userId, newStatus) => {\r\n  try {\r\n\r\n    const result = await updateLoginStatus(userId, newStatus);\r\n\r\n\r\n    console.log('Login status updated successfully:', result);\r\n\r\n\r\n    getEmployees();\r\n\r\n  }\r\n\r\n  catch (error) {\r\n\r\n    console.error('Failed to update login status:', error.message);\r\n\r\n    setSnackbar({\r\n      open: true,\r\n      severity: \"error\",\r\n      message: `Failed to update login status: ${error.message}`,\r\n    });\r\n\r\n  }\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Employee Management</h4>\r\n              <p className={classes.cardCategoryWhite}>\r\n                Employee, Manager & Admin List\r\n              </p>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {/* Admin Table */}\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"20px 0\" }}>\r\n                <h4>Admins</h4>\r\n                <Button color=\"primary\" variant=\"contained\" onClick={handleAddAdmin(\"admin\")}>\r\n                  Add Admin\r\n                </Button>\r\n              </div>\r\n              <Table\r\n                tableHeaderColor=\"primary\"\r\n                tableHead={[\"Full Name\", \"Email\", \"Mobile\"]}\r\n                tableData={adminList}\r\n              />\r\n\r\n              {/* Manager Table */}\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"20px 0\" }}>\r\n                <h4>Managers</h4>\r\n                <Button color=\"secondary\" variant=\"contained\" onClick={handleAddAdmin(\"manager\")}>\r\n                  Add Manager\r\n                </Button>\r\n              </div>\r\n              <Table\r\n                tableHeaderColor=\"warning\"\r\n                tableHead={[\"Full Name\", \"Email\", \"Mobile\"]}\r\n                tableData={managerList}\r\n              />\r\n\r\n              {/* Employee Table */}\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"20px 0\" }}>\r\n                <h4>Employees</h4>\r\n                <Button variant=\"contained\" onClick={handleAddAdmin(\"employee\")}>\r\n                  Add Employee\r\n                </Button>\r\n              </div>\r\n              <Table\r\n                tableHeaderColor=\"info\"\r\n                tableHead={[\"Full Name\", \"Manager\", \"Email\", \"Mobile\",\"Status\"]}\r\n                tableData={employeeList}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n\r\n      {/* Add User Modal */}\r\n      <Dialog\r\n  open={openModal}\r\n  onClose={() => setOpenModal(false)}\r\n  maxWidth=\"sm\"\r\n  fullWidth\r\n>\r\n  <DialogTitle>\r\n    {`Add ${formData.userType.charAt(0).toUpperCase() + formData.userType.slice(1)}`}\r\n  </DialogTitle>\r\n  <DialogContent>\r\n    <Grid container spacing={2}>\r\n      {/* First Name */}\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"First Name\"\r\n          name=\"firstName\"\r\n          fullWidth\r\n          value={formData.firstName}\r\n          onChange={handleInputChange}\r\n          error={!!errors.firstName}\r\n          helperText={errors.firstName}\r\n        />\r\n      </Grid>\r\n\r\n      {/* Last Name */}\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Last Name\"\r\n          name=\"lastName\"\r\n          fullWidth\r\n          value={formData.lastName}\r\n          onChange={handleInputChange}\r\n          error={!!errors.lastName}\r\n          helperText={errors.lastName}\r\n        />\r\n      </Grid>\r\n\r\n      {/* Email */}\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          fullWidth\r\n          value={formData.email}\r\n          onChange={handleInputChange}\r\n          error={!!errors.email}\r\n          helperText={errors.email}\r\n        />\r\n      </Grid>\r\n\r\n      {/* Mobile Number */}\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Mobile Number\"\r\n          name=\"mobileNumber\"\r\n          fullWidth\r\n          value={formData.mobileNumber}\r\n          onChange={handleInputChange}\r\n          error={!!errors.mobileNumber}\r\n          helperText={errors.mobileNumber}\r\n        />\r\n      </Grid>\r\n\r\n      {/* Password */}\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={formData.password}\r\n          onChange={handleInputChange}\r\n          error={!!errors.password}\r\n          helperText={errors.password}\r\n        />\r\n      </Grid>\r\n\r\n      {/* User Type Dropdown */}\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>User Type</InputLabel>\r\n          <Select\r\n            name=\"userType\"\r\n            value={formData.userType}\r\n            onChange={handleInputChange}\r\n          >\r\n            <MenuItem value=\"admin\">Admin</MenuItem>\r\n            <MenuItem value=\"manager\">Manager</MenuItem>\r\n            <MenuItem value=\"employee\">Employee</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      {/* Manager Dropdown if userType === 'employee' */}\r\n      {formData.userType === \"employee\" && (\r\n        <Grid item xs={12}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Manager</InputLabel>\r\n            <Select\r\n              name=\"managerId\"\r\n              value={formData.managerId}\r\n              onChange={handleInputChange}\r\n            >\r\n              {managers.map((mgr) => (\r\n                <MenuItem key={mgr.id} value={mgr.id}>\r\n                  {mgr.firstName} {mgr.lastName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  </DialogContent>\r\n  <DialogActions>\r\n    <Button onClick={() => setOpenModal(false)} color=\"secondary\">\r\n      Cancel\r\n    </Button>\r\n    <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">\r\n      Submit\r\n    </Button>\r\n  </DialogActions>\r\n</Dialog>\r\n\r\n\r\n      {/* Snackbar */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={4000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n        message={snackbar.message}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}