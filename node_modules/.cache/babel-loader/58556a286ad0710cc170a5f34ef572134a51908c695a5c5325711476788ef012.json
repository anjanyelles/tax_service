{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Dialog,DialogTitle,DialogContent,DialogActions,Button,TextField,Grid,Snackbar,MenuItem,Select,InputLabel,FormControl}from\"@material-ui/core\";import Switch from\"@material-ui/core/Switch\";import{makeStyles}from\"@material-ui/core/styles\";import Card from\"components/Card/Card.js\";import CardHeader from\"components/Card/CardHeader.js\";import CardBody from\"components/Card/CardBody.js\";import Table from\"components/Table/Table.js\";import GridContainer from\"components/Grid/GridContainer.js\";import GridItem from\"components/Grid/GridItem.js\";import styles from\"assets/jss/material-dashboard-react/views/dashboardStyle.js\";import{fetchAllEmployeesAndManagers}from\"views/Apis/AfterLogin\";import{sendRequest}from\"views/Apis/AfterLogin\";import{updateLoginStatus}from\"views/Apis/AfterLogin\";// import { fetchAllEmployeesAndManagers, sendRequest } from \"views/Apis/AfterLogin\";\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const useStyles=makeStyles(styles);export default function Addemployees(){const classes=useStyles();const[openModal,setOpenModal]=useState(false);const[formData,setFormData]=useState({firstName:\"\",lastName:\"\",email:\"\",mobileNumber:\"\",password:\"\",userType:\"admin\",managerId:\"\"// For employees only\n});const[managers,setManagers]=useState([]);const[errors,setErrors]=useState({});const[snackbar,setSnackbar]=useState({open:false,severity:\"success\",message:\"\"});const[adminList,setAdminList]=useState([]);const[managerList,setManagerList]=useState([]);const[employeeList,setEmployeeList]=useState([]);// Fetch all users\nconst getEmployees=async()=>{try{const data=await fetchAllEmployeesAndManagers();if(Array.isArray(data)){const admins=[],managers=[],employees=[];data.forEach(emp=>{const fullName=`${emp.firstName} ${emp.lastName}`;const email=emp.email;const mobile=emp.mobileNumber;const statusToggle=/*#__PURE__*/_jsx(Switch,{checked:emp.loginStatus,onChange:()=>handleToggleLoginStatus(emp.id,!emp.loginStatus),color:\"primary\"});if(emp.userType===\"admin\"){admins.push([fullName,email,mobile]);}else if(emp.userType===\"manager\"){managers.push([fullName,email,mobile]);}else if(emp.userType===\"employee\"){employees.push([fullName,emp.managerName||\"N/A\",email,mobile,statusToggle]);}});setAdminList(admins);setManagerList(managers);setEmployeeList(employees);}}catch(error){console.error(\"Error fetching employee data:\",error.message);}};useEffect(()=>{getEmployees();},[]);const handleInputChange=async e=>{const{name,value}=e.target;// If user selects \"employee\", fetch managers\nif(name===\"userType\"&&value===\"employee\"){try{const response=await fetch(\"http://ec2-43-204-235-24.ap-south-1.compute.amazonaws.com:8686/api/incometax-service/auth/allmanagers\");const data=await response.json();setManagers(data);// save manager list for dropdown\n}catch(error){console.error(\"Failed to fetch managers:\",error.message);}}// Reset managerId if changing userType to anything other than employee\nif(name===\"userType\"&&value!==\"employee\"){setFormData(prev=>({...prev,[name]:value,managerId:\"\"// reset managerId\n}));}else{setFormData(prev=>({...prev,[name]:value}));}};const validate=()=>{let tempErrors={};if(!formData.firstName)tempErrors.firstName=\"First name is required\";if(!formData.lastName)tempErrors.lastName=\"Last name is required\";if(!formData.email)tempErrors.email=\"Email is required\";else if(!/\\S+@\\S+\\.\\S+/.test(formData.email))tempErrors.email=\"Invalid email format\";if(!formData.mobileNumber)tempErrors.mobileNumber=\"Mobile number is required\";else if(!/^\\d{10}$/.test(formData.mobileNumber))tempErrors.mobileNumber=\"Invalid mobile number\";if(!formData.password)tempErrors.password=\"Password is required\";setErrors(tempErrors);return Object.keys(tempErrors).length===0;};const handleSubmit=async()=>{try{// Construct payload\nconst payload={firstName:formData.firstName,lastName:formData.lastName,email:formData.email,mobileNumber:formData.mobileNumber,password:formData.password,userType:formData.userType};if(formData.userType===\"employee\"){payload.managerId=formData.managerId;// only for employees\n}const response=await sendRequest({method:\"POST\",url:\"auth/userEmailPassword\",data:payload});alert(response.status);if(response.userStatus){setSnackbar({open:true,severity:\"success\",message:`${response.status} for ${formData.userType}!`});}else{setSnackbar({open:true,severity:\"warning\",message:`Failed to register ${formData.userType}.`});}// Reset\nsetFormData({firstName:\"\",lastName:\"\",email:\"\",mobileNumber:\"\",password:\"\",userType:\"admin\",managerId:\"\"});setOpenModal(false);await getEmployees();}catch(error){setSnackbar({open:true,severity:\"error\",message:error.message});}};// Open Modal with userType set\nconst handleAddAdmin=type=>()=>{setFormData(prev=>({...prev,userType:type.toLowerCase()}));setOpenModal(true);};const handleToggleLoginStatus=async(userId,newStatus)=>{try{const result=await updateLoginStatus(userId,newStatus);console.log('Login status updated successfully:',result);getEmployees();}catch(error){console.error('Failed to update login status:',error.message);setSnackbar({open:true,severity:\"error\",message:`Failed to update login status: ${error.message}`});}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(GridContainer,{children:/*#__PURE__*/_jsx(GridItem,{xs:12,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(CardHeader,{color:\"primary\",children:[/*#__PURE__*/_jsx(\"h4\",{className:classes.cardTitleWhite,children:\"Employee Management\"}),/*#__PURE__*/_jsx(\"p\",{className:classes.cardCategoryWhite,children:\"Employee, Manager & Admin List\"})]}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",margin:\"20px 0\"},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Admins\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"contained\",onClick:handleAddAdmin(\"admin\"),children:\"Add Admin\"})]}),/*#__PURE__*/_jsx(Table,{tableHeaderColor:\"primary\",tableHead:[\"Full Name\",\"Email\",\"Mobile\"],tableData:adminList}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",margin:\"20px 0\"},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Managers\"}),/*#__PURE__*/_jsx(Button,{color:\"secondary\",variant:\"contained\",onClick:handleAddAdmin(\"manager\"),children:\"Add Manager\"})]}),/*#__PURE__*/_jsx(Table,{tableHeaderColor:\"warning\",tableHead:[\"Full Name\",\"Email\",\"Mobile\"],tableData:managerList}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",margin:\"20px 0\"},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Employees\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleAddAdmin(\"employee\"),children:\"Add Employee\"})]}),/*#__PURE__*/_jsx(Table,{tableHeaderColor:\"info\",tableHead:[\"Full Name\",\"Manager\",\"Email\",\"Mobile\",\"Status\"],tableData:employeeList})]})]})})}),/*#__PURE__*/_jsxs(Dialog,{open:openModal,onClose:()=>setOpenModal(false),maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:`Add ${formData.userType.charAt(0).toUpperCase()+formData.userType.slice(1)}`}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(TextField,{label:\"First Name\",name:\"firstName\",fullWidth:true,value:formData.firstName,onChange:handleInputChange,error:!!errors.firstName,helperText:errors.firstName})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(TextField,{label:\"Last Name\",name:\"lastName\",fullWidth:true,value:formData.lastName,onChange:handleInputChange,error:!!errors.lastName,helperText:errors.lastName})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(TextField,{label:\"Email\",name:\"email\",fullWidth:true,value:formData.email,onChange:handleInputChange,error:!!errors.email,helperText:errors.email})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(TextField,{label:\"Mobile Number\",name:\"mobileNumber\",fullWidth:true,value:formData.mobileNumber,onChange:handleInputChange,error:!!errors.mobileNumber,helperText:errors.mobileNumber})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(TextField,{label:\"Password\",name:\"password\",type:\"password\",fullWidth:true,value:formData.password,onChange:handleInputChange,error:!!errors.password,helperText:errors.password})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"User Type\"}),/*#__PURE__*/_jsxs(Select,{name:\"userType\",value:formData.userType,onChange:handleInputChange,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"admin\",children:\"Admin\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"manager\",children:\"Manager\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"employee\",children:\"Employee\"})]})]})}),formData.userType===\"employee\"&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Manager\"}),/*#__PURE__*/_jsx(Select,{name:\"managerId\",value:formData.managerId,onChange:handleInputChange,children:managers.map(mgr=>/*#__PURE__*/_jsxs(MenuItem,{value:mgr.id,children:[mgr.firstName,\" \",mgr.lastName]},mgr.id))})]})})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setOpenModal(false),color:\"secondary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmit,color:\"primary\",variant:\"contained\",children:\"Submit\"})]})]}),/*#__PURE__*/_jsx(Snackbar,{open:snackbar.open,autoHideDuration:4000,onClose:()=>setSnackbar({...snackbar,open:false}),message:snackbar.message})]});}","map":{"version":3,"names":["React","useState","useEffect","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","Grid","Snackbar","MenuItem","Select","InputLabel","FormControl","Switch","makeStyles","Card","CardHeader","CardBody","Table","GridContainer","GridItem","styles","fetchAllEmployeesAndManagers","sendRequest","updateLoginStatus","jsx","_jsx","jsxs","_jsxs","useStyles","Addemployees","classes","openModal","setOpenModal","formData","setFormData","firstName","lastName","email","mobileNumber","password","userType","managerId","managers","setManagers","errors","setErrors","snackbar","setSnackbar","open","severity","message","adminList","setAdminList","managerList","setManagerList","employeeList","setEmployeeList","getEmployees","data","Array","isArray","admins","employees","forEach","emp","fullName","mobile","statusToggle","checked","loginStatus","onChange","handleToggleLoginStatus","id","color","push","managerName","error","console","handleInputChange","e","name","value","target","response","fetch","json","prev","validate","tempErrors","test","Object","keys","length","handleSubmit","payload","method","url","alert","status","userStatus","handleAddAdmin","type","toLowerCase","userId","newStatus","result","log","children","xs","className","cardTitleWhite","cardCategoryWhite","style","display","justifyContent","margin","variant","onClick","tableHeaderColor","tableHead","tableData","onClose","maxWidth","fullWidth","charAt","toUpperCase","slice","container","spacing","item","label","helperText","map","mgr","autoHideDuration"],"sources":["/Users/anjanyelle/Desktop/tax/taxserves_react_crm_dashboard/src/components/Addemployees/Addemployees.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Snackbar,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Table from \"components/Table/Table.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport { fetchAllEmployeesAndManagers } from \"views/Apis/AfterLogin\";\r\nimport { sendRequest } from \"views/Apis/AfterLogin\";\r\nimport { updateLoginStatus } from \"views/Apis/AfterLogin\";\r\n// import { fetchAllEmployeesAndManagers, sendRequest } from \"views/Apis/AfterLogin\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Addemployees() {\r\n  const classes = useStyles();\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    mobileNumber: \"\",\r\n    password: \"\",\r\n    userType: \"admin\",\r\n    managerId: \"\", // For employees only\r\n  });\r\n\r\n  const [managers, setManagers] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    severity: \"success\",\r\n    message: \"\",\r\n  });\r\n  const [adminList, setAdminList] = useState([]);\r\n  const [managerList, setManagerList] = useState([]);\r\n  const [employeeList, setEmployeeList] = useState([]);\r\n\r\n  // Fetch all users\r\n  const getEmployees = async () => {\r\n    try {\r\n      const data = await fetchAllEmployeesAndManagers();\r\n      if (Array.isArray(data)) {\r\n        const admins = [], managers = [], employees = [];\r\n        data.forEach((emp) => {\r\n          const fullName = `${emp.firstName} ${emp.lastName}`;\r\n          const email = emp.email;\r\n          const mobile = emp.mobileNumber;\r\n\r\n          const statusToggle = (\r\n    <Switch\r\n      checked={emp.loginStatus}\r\n      onChange={() => handleToggleLoginStatus(emp.id, !emp.loginStatus)}\r\n      color=\"primary\"\r\n    />\r\n  );\r\n\r\n          if (emp.userType === \"admin\") {\r\n            admins.push([fullName, email, mobile]);\r\n          } else if (emp.userType === \"manager\") {\r\n            managers.push([fullName, email, mobile]);\r\n          } else if (emp.userType === \"employee\") {\r\n            employees.push([\r\n              fullName,\r\n              emp.managerName || \"N/A\",\r\n              email,\r\n              mobile,\r\n              statusToggle,\r\n            ]);\r\n\r\n          }\r\n        });\r\n        setAdminList(admins);\r\n        setManagerList(managers);\r\n        setEmployeeList(employees);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching employee data:\", error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEmployees();\r\n  }, []);\r\n\r\n  const handleInputChange = async (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    // If user selects \"employee\", fetch managers\r\n    if (name === \"userType\" && value === \"employee\") {\r\n      try {\r\n        const response = await fetch(\"http://ec2-43-204-235-24.ap-south-1.compute.amazonaws.com:8686/api/incometax-service/auth/allmanagers\");\r\n        const data = await response.json();\r\n        setManagers(data); // save manager list for dropdown\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch managers:\", error.message);\r\n      }\r\n    }\r\n\r\n    // Reset managerId if changing userType to anything other than employee\r\n    if (name === \"userType\" && value !== \"employee\") {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n        managerId: \"\", // reset managerId\r\n      }));\r\n    } else {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n\r\n  const validate = () => {\r\n    let tempErrors = {};\r\n    if (!formData.firstName) tempErrors.firstName = \"First name is required\";\r\n    if (!formData.lastName) tempErrors.lastName = \"Last name is required\";\r\n    if (!formData.email) tempErrors.email = \"Email is required\";\r\n    else if (!/\\S+@\\S+\\.\\S+/.test(formData.email))\r\n      tempErrors.email = \"Invalid email format\";\r\n    if (!formData.mobileNumber)\r\n      tempErrors.mobileNumber = \"Mobile number is required\";\r\n    else if (!/^\\d{10}$/.test(formData.mobileNumber))\r\n      tempErrors.mobileNumber = \"Invalid mobile number\";\r\n    if (!formData.password) tempErrors.password = \"Password is required\";\r\n    setErrors(tempErrors);\r\n    return Object.keys(tempErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      // Construct payload\r\n      const payload = {\r\n        firstName: formData.firstName,\r\n        lastName: formData.lastName,\r\n        email: formData.email,\r\n        mobileNumber: formData.mobileNumber,\r\n        password: formData.password,\r\n        userType: formData.userType,\r\n      };\r\n\r\n      if (formData.userType === \"employee\") {\r\n        payload.managerId = formData.managerId; // only for employees\r\n      }\r\n\r\n      const response = await sendRequest({\r\n        method: \"POST\",\r\n        url: \"auth/userEmailPassword\",\r\n        data: payload,\r\n      });\r\n\r\n      alert(response.status);\r\n\r\n      if (response.userStatus) {\r\n        setSnackbar({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: `${response.status} for ${formData.userType}!`,\r\n        });\r\n      } else {\r\n        setSnackbar({\r\n          open: true,\r\n          severity: \"warning\",\r\n          message: `Failed to register ${formData.userType}.`,\r\n        });\r\n      }\r\n\r\n      // Reset\r\n      setFormData({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        mobileNumber: \"\",\r\n        password: \"\",\r\n        userType: \"admin\",\r\n        managerId: \"\",\r\n      });\r\n      setOpenModal(false);\r\n      await getEmployees();\r\n    } catch (error) {\r\n      setSnackbar({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Open Modal with userType set\r\n  const handleAddAdmin = (type) => () => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      userType: type.toLowerCase(),\r\n    }));\r\n    setOpenModal(true);\r\n  };\r\n\r\n const handleToggleLoginStatus = async (userId, newStatus) => {\r\n  try {\r\n\r\n    const result = await updateLoginStatus(userId, newStatus);\r\n\r\n\r\n    console.log('Login status updated successfully:', result);\r\n\r\n\r\n    getEmployees();\r\n\r\n  }\r\n\r\n  catch (error) {\r\n\r\n    console.error('Failed to update login status:', error.message);\r\n\r\n    setSnackbar({\r\n      open: true,\r\n      severity: \"error\",\r\n      message: `Failed to update login status: ${error.message}`,\r\n    });\r\n\r\n  }\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Employee Management</h4>\r\n              <p className={classes.cardCategoryWhite}>\r\n                Employee, Manager & Admin List\r\n              </p>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {/* Admin Table */}\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"20px 0\" }}>\r\n                <h4>Admins</h4>\r\n                <Button color=\"primary\" variant=\"contained\" onClick={handleAddAdmin(\"admin\")}>\r\n                  Add Admin\r\n                </Button>\r\n              </div>\r\n              <Table\r\n                tableHeaderColor=\"primary\"\r\n                tableHead={[\"Full Name\", \"Email\", \"Mobile\"]}\r\n                tableData={adminList}\r\n              />\r\n\r\n              {/* Manager Table */}\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"20px 0\" }}>\r\n                <h4>Managers</h4>\r\n                <Button color=\"secondary\" variant=\"contained\" onClick={handleAddAdmin(\"manager\")}>\r\n                  Add Manager\r\n                </Button>\r\n              </div>\r\n              <Table\r\n                tableHeaderColor=\"warning\"\r\n                tableHead={[\"Full Name\", \"Email\", \"Mobile\"]}\r\n                tableData={managerList}\r\n              />\r\n\r\n              {/* Employee Table */}\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"20px 0\" }}>\r\n                <h4>Employees</h4>\r\n                <Button variant=\"contained\" onClick={handleAddAdmin(\"employee\")}>\r\n                  Add Employee\r\n                </Button>\r\n              </div>\r\n              <Table\r\n                tableHeaderColor=\"info\"\r\n                tableHead={[\"Full Name\", \"Manager\", \"Email\", \"Mobile\",\"Status\"]}\r\n                tableData={employeeList}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n\r\n      {/* Add User Modal */}\r\n      <Dialog\r\n  open={openModal}\r\n  onClose={() => setOpenModal(false)}\r\n  maxWidth=\"sm\"\r\n  fullWidth\r\n>\r\n  <DialogTitle>\r\n    {`Add ${formData.userType.charAt(0).toUpperCase() + formData.userType.slice(1)}`}\r\n  </DialogTitle>\r\n  <DialogContent>\r\n    <Grid container spacing={2}>\r\n      {/* First Name */}\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"First Name\"\r\n          name=\"firstName\"\r\n          fullWidth\r\n          value={formData.firstName}\r\n          onChange={handleInputChange}\r\n          error={!!errors.firstName}\r\n          helperText={errors.firstName}\r\n        />\r\n      </Grid>\r\n\r\n      {/* Last Name */}\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Last Name\"\r\n          name=\"lastName\"\r\n          fullWidth\r\n          value={formData.lastName}\r\n          onChange={handleInputChange}\r\n          error={!!errors.lastName}\r\n          helperText={errors.lastName}\r\n        />\r\n      </Grid>\r\n\r\n      {/* Email */}\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          fullWidth\r\n          value={formData.email}\r\n          onChange={handleInputChange}\r\n          error={!!errors.email}\r\n          helperText={errors.email}\r\n        />\r\n      </Grid>\r\n\r\n      {/* Mobile Number */}\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Mobile Number\"\r\n          name=\"mobileNumber\"\r\n          fullWidth\r\n          value={formData.mobileNumber}\r\n          onChange={handleInputChange}\r\n          error={!!errors.mobileNumber}\r\n          helperText={errors.mobileNumber}\r\n        />\r\n      </Grid>\r\n\r\n      {/* Password */}\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={formData.password}\r\n          onChange={handleInputChange}\r\n          error={!!errors.password}\r\n          helperText={errors.password}\r\n        />\r\n      </Grid>\r\n\r\n      {/* User Type Dropdown */}\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>User Type</InputLabel>\r\n          <Select\r\n            name=\"userType\"\r\n            value={formData.userType}\r\n            onChange={handleInputChange}\r\n          >\r\n            <MenuItem value=\"admin\">Admin</MenuItem>\r\n            <MenuItem value=\"manager\">Manager</MenuItem>\r\n            <MenuItem value=\"employee\">Employee</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      {/* Manager Dropdown if userType === 'employee' */}\r\n      {formData.userType === \"employee\" && (\r\n        <Grid item xs={12}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Manager</InputLabel>\r\n            <Select\r\n              name=\"managerId\"\r\n              value={formData.managerId}\r\n              onChange={handleInputChange}\r\n            >\r\n              {managers.map((mgr) => (\r\n                <MenuItem key={mgr.id} value={mgr.id}>\r\n                  {mgr.firstName} {mgr.lastName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  </DialogContent>\r\n  <DialogActions>\r\n    <Button onClick={() => setOpenModal(false)} color=\"secondary\">\r\n      Cancel\r\n    </Button>\r\n    <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">\r\n      Submit\r\n    </Button>\r\n  </DialogActions>\r\n</Dialog>\r\n\r\n\r\n      {/* Snackbar */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={4000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n        message={snackbar.message}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}